services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - music
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SCRAPE_URL: ${SCRAPE_URL}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      CRON_ENABLED: ${CRON_ENABLED}
    ports:
      - "3000:3000"
    networks:
      - music
    command: sh -c "npx prisma generate & npx prisma db push --accept-data-loss && node ./src/app.js"


volumes:
  db_data:

networks:
  music:
    driver: bridge
